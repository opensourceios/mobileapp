﻿<#@ template language="C#" hostspecific="True"
#><#@ assembly name="System.Core"
#><#@ import namespace="System.IO"
#><#@ import namespace="System.Linq"
#>using Realms;
using Toggl.Multivac.Models;
using Toggl.PrimeRadiant.Models;

namespace Toggl.PrimeRadiant.Realm
{
<#
    var filePath = Path.GetDirectoryName(Host.TemplateFile);
    var solutionDirectory = Path.Combine(filePath, "../../Toggl.Multivac/Models/" );
    var modelsToGenerate = Directory.GetFiles(solutionDirectory, "*.cs");
    var isFirst = true;

    foreach(var modelFile in modelsToGenerate)
    {
        var interfaceName = Path.GetFileName(modelFile).Replace(".cs", "");
        if (interfaceName == "IBaseModel") continue;

        var className = interfaceName.Substring(1, interfaceName.Length - 1);
        var realmClassName = $"Realm{className}";

        if (!isFirst)
            WriteLine("");

        WriteLine($"    internal partial class {realmClassName}");
        WriteLine( "    {");
        WriteLine( "        [PrimaryKey]");
        WriteLine( "        public int Id { get; set; }\n");
        WriteLine( "        public bool IsDirty { get; set; }\n");
        WriteLine($"        public {realmClassName}() {{ }}\n");
        WriteLine($"        public {realmClassName}(IDatabase{className} entity)");
        WriteLine($"            : this(entity as {interfaceName})");
        WriteLine( "        {");
        WriteLine( "            IsDirty = entity.IsDirty;");
        WriteLine( "        }\n");
        WriteLine($"        public {realmClassName}({interfaceName} entity)");
        WriteLine( "        {");
        WriteLine( "            Id = entity.Id;");

        foreach(var line in File.ReadAllLines(modelFile))
        {
            var isProperty = line.Contains("get;");
            if (!isProperty) continue;

            var trimmedLine = line.Trim();
            var indexOfPropName = trimmedLine.IndexOf(" ") + 1;
            var propName = trimmedLine.Substring(indexOfPropName, trimmedLine.Length - 9 - indexOfPropName);

            WriteLine($"            {propName} = entity.{propName};");
        }

        WriteLine( "            IsDirty = true;");
        WriteLine("        }");
        WriteLine("    }");

        isFirst = false;
    }
#>}